@model MyEventsViewModel

@{
    ViewData["Title"] = "MyReservations";
}

<h2>My Reservations</h2>
<hr />

<div class="row">
    <div class="col-md-5">
        <ul class="nav nav-pills nav-stacked">
            <li>
                <a asp-area="" asp-controller="Profile" asp-action="PastEvents" class="btn btn-default">Past Events</a>
            </li>
        </ul>
    </div>
</div>
<hr />
@{
    var peviousPageDisable = Model.CurrentPage == 1 ? "disabled" : String.Empty;
    var nextPageDisable = Model.CurrentPage == Model.TotalPages ? "disabled" : String.Empty;
}

<ul class="pagination">
    <li class="page-item @peviousPageDisable">
        <a class="page-link  @peviousPageDisable" href="MyReservations?page=@Model.PreviousPage" tabindex="-1">Previous</a>
    </li>
    @for (int i = 1; i <= Model.TotalPages; i++)
    {
        <li class="page-item @(Model.CurrentPage == i ? "active": String.Empty)"><a class="page-link" href="MyReservations?page=@i">@i</a></li>


    }
    <li class="page-item @nextPageDisable">
        <a class="page-link @nextPageDisable" href="MyReservations?page=@Model.NextPage">Next</a>
    </li>
</ul>


@if (Model.Events.Count() < 1)
{
    <h3> No reservation</h3>
}

else
{


    <div class="panel-group">
        @foreach (var item in Model.Events)
        {
            <div class="panel @(item.IsConfirmed == false ? "panel-warning": "panel-success") event-panel-card">
                <div class="panel-heading">
                    <div class="row">
                        <div class="col-md-4">
                            Event Date: <b>@item.EventDate.ToShortDateString()</b>
                        </div>
                        <div class="col-md-4">
                            @if (item.IsConfirmed)
                            {
                                <p>The Reservation is confirmed</p>
                            }
                            else
                            {
                                <p style="color:red"><b>The Reservation is not confirmed</b></p>
                            }
                        </div>
                        <div class="col-md-4">
                            <p style="text-align: right">
                                Hall: @item.HallName
                            </p>
                        </div>
                    </div>
                </div>
                <div class="panel-body">
                    <p>
                        Event Title: @item.EventTitle
                    </p>
                    <p>
                        Rent Time: @item.RentTimeDisplay
                    </p>
                    <p>
                        Number of people: @item.NumberOfPeople
                    </p>
                </div>
                @{
                    var routeValue = new Dictionary<string, string> { ["id"] = item.EventId.ToString() };
                }
                <div class="panel-footer">
                    <div class="row">
                        <div class="col-md-6">
                            <a asp-controller="Profile" asp-action="EventDetails" asp-all-route-data="routeValue" class="btn btn-primary">Details</a>
                        </div>
                        <div class="col-md-6">
                            <p style="text-align: right">
                                Total Price: <b>$@item.Totalprice.ToString("F")</b>
                            </p>
                        </div>
                    </div>
                </div>
            </div>

        }
    </div>

}

<ul class="pagination">
    <li class="page-item @peviousPageDisable">
        <a class="page-link  @peviousPageDisable" href="MyReservations?page=@Model.PreviousPage" tabindex="-1">Previous</a>
    </li>
    @for (int i = 1; i <= Model.TotalPages; i++)
    {
        <li class="page-item @(Model.CurrentPage == i ? "active": String.Empty)"><a class="page-link" href="MyReservations?page=@i">@i</a></li>


    }
    <li class="page-item @nextPageDisable">
        <a class="page-link @nextPageDisable" href="MyReservations?page=@Model.NextPage">Next</a>
    </li>
</ul>